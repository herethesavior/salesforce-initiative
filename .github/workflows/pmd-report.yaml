name: validate-pull-request
on:
  - pull_request
env:
  FAIL_ON_VIOLATION: true
jobs:
  pmd-code-analysis:
    runs-on: ubuntu-latest
    outputs:
      pmd-apex: ${{ steps.changes.outputs.pmd-apex }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get list of files with changes
        id: changes
        run: |
          echo "::set-output name=pmd-apex::$(git diff --name-only --diff-filter=ACMRT origin/${{ github.event.pull_request.base.ref}}...origin/${{ github.event.pull_request.head.ref }} | grep -E '\.(cls|trigger)$' | tr '\n' ',' | sed 's/,$//')"
      - name: Setup Java
        # only run if there are file changes
        if: steps.changes.outputs.pmd-apex
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Install PMD
        # only run if there are file changes
        if: steps.changes.outputs.pmd-apex
        run: |
          if [ ! -d pmd-bin-6.53.0 ]; then
            curl -L "https://github.com/pmd/pmd/releases/download/pmd_releases/6.53.0/pmd-bin-6.53.0.zip" -o pmd-bin-6.53.0.zip
            unzip pmd-bin-6.53.0.zip
            rm pmd-bin-6.53.0.zip
          fi
      - name: Run PMD Analysis
        # only run if there are file changes
        if: steps.changes.outputs.pmd-apex
        id: analysis
        # Feel free to modify below pmd options as per your needs
        # --------------------------------------------------------------------------------
        # --rulesets <refs>           | Comma-separated list of ruleset or rule references
        # --minimum-priority <num>    | Rule priority threshold; rules with lower priority than configured here won't be used
        # --------------------------------------------------------------------------------
        run: |
          FILE_LIST=$(mktemp)
          echo ${{ steps.changes.outputs.pmd-apex }} > $FILE_LIST
          $(pmd-bin-6.53.0/bin/run.sh pmd --rulesets pmd-ruleset.xml --file-list $FILE_LIST --short-names --minimum-priority 5 --fail-on-violation false --no-cache --report-file PMD_REPORT.txt)
          PMD_REPORT="$(cat PMD_REPORT.txt)"
          if [ ! -z "${PMD_REPORT}" ]; then
            QUOTE_CLEANUP=${PMD_REPORT//\'/\"}
            PMD_REPORT="${QUOTE_CLEANUP}"
            PMD_REPORT="${PMD_REPORT//'%'/'%25'}"
            PMD_REPORT="${PMD_REPORT//$'\n'/'\n'}"
            PMD_REPORT="${PMD_REPORT//$'\r'/'%0D'}"
          fi
          echo "PMD_REPORT=$PMD_REPORT" >> $GITHUB_ENV
      - name: Get Current Date
        # only run if there is a pmd violation generated
        if: env.PMD_REPORT != ''
        run: |
          echo "CURRENT_DATE=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
      - name: Create PR Comment (With PMD Violation)
        # only run if there is a pmd violation generated
        if: env.PMD_REPORT != ''
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ github.event.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ':warning::fire:**WARNING!**:fire: We found a couple of code violation in your pull request.\n```\nPMD REPORT | ${{ env.CURRENT_DATE }}\n------------------------------------------------------------------------\n${{ env.PMD_REPORT }}\n```\nPlease try to fix above issue and recommit for revalidation.'
            })
      - name: Fail on Violation
        # only run if there is a pmd violation generated and FAIL_ON_VIOLATION is enabled
        if: ${{ env.PMD_REPORT != '' && env.FAIL_ON_VIOLATION == 'true' }}
        run: |
            echo "You must not have any code violation in your pull request."
            exit 1
      - name: Create PR Comment (Without PMD Violation)
        # only run if there is no pmd violation generated
        if: env.PMD_REPORT == ''
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ github.event.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ':white_check_mark::star:**SUCCESS!**:star: We did not find any code violation in your pull request. Goodjob!'
            })
